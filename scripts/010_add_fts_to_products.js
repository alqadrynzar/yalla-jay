const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '../.env') });
const pool = require('../src/config/database.js');

const addFtsToProductsScript = async () => {
  const client = await pool.connect();
  try {
    console.log('ุจุฏุก ุนูููุฉ ุชุนุฏูู ุฌุฏูู products ูุฏุนู ุงูุจุญุซ ุจุงููุต ุงููุงูู (FTS)...');

    // ุงูุฎุทูุฉ 1: ุฅุถุงูุฉ ุนููุฏ tsvector ุฅุฐุง ูู ููู ููุฌูุฏุงู
    await client.query(`
      ALTER TABLE products
      ADD COLUMN IF NOT EXISTS document_vector TSVECTOR;
    `);
    console.log('โ ุชู: ุฅุถุงูุฉ ุนููุฏ "document_vector" ุฅูู ุฌุฏูู "products" ุฃู ุงูุชุฃูุฏ ูู ูุฌูุฏู.');

    // ุงูุฎุทูุฉ 2: ุฅูุดุงุก ุฃู ุงุณุชุจุฏุงู ุฏุงูุฉ ุงูู Trigger
    await client.query(`
      CREATE OR REPLACE FUNCTION product_document_vector_trigger() RETURNS trigger AS $$
      BEGIN
        NEW.document_vector :=
          to_tsvector('arabic', coalesce(NEW.name, '') || ' ' || coalesce(NEW.description, ''));
        RETURN NEW;
      END
      $$ LANGUAGE plpgsql;
    `);
    console.log('โ ุชู: ุฅูุดุงุก ุฃู ุงุณุชุจุฏุงู ุฏุงูุฉ ุงูู Trigger "product_document_vector_trigger".');

    // ุงูุฎุทูุฉ 3: ุญุฐู ุงูู Trigger ุงููุฏูู ุฅุฐุง ูุงู ููุฌูุฏุงู ูุฅูุดุงุก ูุงุญุฏ ุฌุฏูุฏ
    await client.query(`
      DROP TRIGGER IF EXISTS tsvectorupdate ON products;
    `);
    await client.query(`
      CREATE TRIGGER tsvectorupdate
      BEFORE INSERT OR UPDATE ON products
      FOR EACH ROW EXECUTE FUNCTION product_document_vector_trigger();
    `);
    console.log('โ ุชู: ุฅูุดุงุก ุงูู Trigger "tsvectorupdate" ุนูู ุฌุฏูู "products".');

    // ุงูุฎุทูุฉ 4: ุชุญุฏูุซ ุงูุตููู ุงูููุฌูุฏุฉ ูููุก document_vector (ููุท ุฅุฐุง ูุงูุช ูุงุฑุบุฉ)
    // ูุฐุง ููู ููููุชุฌุงุช ุงูุชู ูุงูุช ููุฌูุฏุฉ ูุจู ุฅุถุงูุฉ ุงูุนููุฏ ูุงูู Trigger
    console.log('โณ ุฌุงุฑู ุชุญุฏูุซ document_vector ููููุชุฌุงุช ุงูููุฌูุฏุฉ...');
    const updateResult = await client.query(`
      UPDATE products
      SET document_vector = to_tsvector('arabic', coalesce(name, '') || ' ' || coalesce(description, ''))
      WHERE document_vector IS NULL;
    `);
    console.log(`โ ุชู: ุชุญุฏูุซ document_vector ูู ${updateResult.rowCount} ููุชุฌุงู ููุฌูุฏุงู.`);

    // ุงูุฎุทูุฉ 5: ุฅูุดุงุก ููุฑุณ GIN ุฅุฐุง ูู ููู ููุฌูุฏุงู
    await client.query(`
      CREATE INDEX IF NOT EXISTS products_document_vector_idx
      ON products
      USING GIN (document_vector);
    `);
    console.log('โ ุชู: ุฅูุดุงุก ููุฑุณ GIN "products_document_vector_idx" ุนูู ุนููุฏ "document_vector" ุฃู ุงูุชุฃูุฏ ูู ูุฌูุฏู.');

    console.log('๐ ุงูุชููุช ุนูููุฉ ุชููุฆุฉ ุงูุจุญุซ ุจุงููุต ุงููุงูู ูุฌุฏูู products ุจูุฌุงุญ!');

  } catch (err) {
    console.error('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุนูููุฉ ุชููุฆุฉ FTS:', err);
    if (err.message && err.message.includes("text search configuration \"arabic\" does not exist")) {
        console.error("------------------------------------------------------------------------------------");
        console.error("ุฎุทุฃ ูุงู: ุชููุฆุฉ ุงูุจุญุซ ุงููุตู ููุบุฉ ุงูุนุฑุจูุฉ ('arabic') ุบูุฑ ููุฌูุฏุฉ ูู ูุงุนุฏุฉ ุจูุงูุงุชู.");
        console.error("ูุฏ ุชุญุชุงุฌ ุฅูู ุชุซุจูุช ุญุฒู ุฅุถุงููุฉ ููุบุฉ ุงูุนุฑุจูุฉ ูู PostgreSQL ุฃู ุงูุชุฃูุฏ ูู ุชูุนูููุง.");
        console.error("ููููู ุชุฌุฑุจุฉ ุงุณุชุฎุฏุงู 'simple' ุจุฏูุงู ูู 'arabic' ูู ุงูุฏุงูุฉ ูุงูู UPDATE ูุญู ูุคูุชุ");
        console.error("ูููู ุงูุจุญุซ ูู ูููู ุจููุณ ุงูููุงุกุฉ ููุบุฉ ุงูุนุฑุจูุฉ.");
        console.error("------------------------------------------------------------------------------------");
    }
  } finally {
    client.release();
    await pool.end();
    console.log('ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช.');
  }
};

addFtsToProductsScript();

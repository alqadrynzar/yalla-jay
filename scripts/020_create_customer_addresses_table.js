const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '../.env') }); // ุชูุช ุงูุฅุถุงูุฉ ููุทุงุจูุฉ ุฃุณููุจู
const pool = require('../src/config/database.js'); // ุงููุณุงุฑ ุตุญูุญ ุงูุขู

const createCustomerAddressesTableMigration = async () => {
  const client = await pool.connect();
  console.log('ุจุฏุก ุนูููุฉ ุฅูุดุงุก ุฌุฏูู "customer_addresses"...');
  try {
    await client.query(`
      CREATE TABLE IF NOT EXISTS customer_addresses (
        id SERIAL PRIMARY KEY,
        user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
        address_label VARCHAR(100),
        full_address TEXT NOT NULL,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
      );
    `);
    console.log('โ ุชู: ุฅูุดุงุก ุฌุฏูู "customer_addresses" ุฃู ุงูุชุฃูุฏ ูู ูุฌูุฏู.');

    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_customer_addresses_user_id ON customer_addresses(user_id);
    `);
    console.log('โ ุชู: ุฅูุดุงุก ููุฑุณ "idx_customer_addresses_user_id" ุนูู ุฌุฏูู "customer_addresses" ุฃู ุงูุชุฃูุฏ ูู ูุฌูุฏู.');

    console.log('๐ ุงูุชููุช ุนูููุฉ ุชุฑุญูู ุฌุฏูู "customer_addresses" ุจูุฌุงุญ!');

  } catch (err) {
    // ุทุจุงุนุฉ ุงูุฎุทุฃ ุงููุงูู ููุง ููุธูุฑ ูู ุงูุทุฑููุฉ
    console.error('โ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุนูููุฉ ุชุฑุญูู ุฌุฏูู "customer_addresses":', err);
    // ูุง ุชูู ุจุฅุนุงุฏุฉ throw ููุฎุทุฃ ููุง ุฅุฐุง ููุช ุชุฑูุฏ ููู finally ุฃู ูููุฐ ุฏุงุฆูุงู ูุบูู ุงูู pool
    // ูููู ุจูุง ุฃููุง ูุฑูุฏ ููุณูุฑุจุช ุฃู ูุดูุฑ ุฅูู ูุดูุ ูููููุง ุฅุนุงุฏุฉ throw ุฃู ุงูุฎุฑูุฌ ุจููุฏ ุฎุทุฃ
    throw err; // ุฃุนุฏ throw ููุณูุงุญ ุจูุนุงูุฌุฉ ุงูุฎุทุฃ ูู ุงููุณุชูู ุงูุฃุนูู ุฅุฐุง ูุฒู ุงูุฃูุฑุ ุฃู ููุฎุฑูุฌ ุจููุฏ ุฎุทุฃ
  } finally {
    if (client) {
      client.release();
      console.log('ุชู ุชุญุฑูุฑ ุงูุงุชุตุงู ุจุงููููู (client).');
    }
    // ูุง ุชูู ุจุฅุบูุงู pool ููุง ุฅุฐุง ูุงูุช ููุงู ุนูููุงุช ุฃุฎุฑู ูุฏ ุชุณุชุฎุฏูู ูุจุงุดุฑุฉ ุจุนุฏ ูุฐุง ุงูุณูุฑุจุช
    // ูู ูุซุงูู ุงูุณุงุจูุ ุชู ุฅุบูุงูู. ุณูุชุจุน ุฐูู.
  }
};

// ุฏุงูุฉ ุฑุฆูุณูุฉ ูุชุดุบูู ุงูุณูุฑุจุช ูุฅุบูุงู ุงูู pool ุจุดูู ููุงุฆู
const runMigration = async () => {
  try {
    await createCustomerAddressesTableMigration();
  } catch (error) {
    console.error("โ ูุดู ุณูุฑุจุช ุงูุชุฑุญูู 020 ูู ุงูุชูููุฐ ุจุดูู ูุงูู.");
    // ุงูุฎุทุฃ ุงูุฃุตูู ูุฌุจ ุฃู ูููู ูุฏ ุทูุจุน ุจุงููุนู ูู ุฏุงุฎู createCustomerAddressesTableMigration
  } finally {
    try {
      await pool.end();
      console.log('ุชู ุฅุบูุงู pool ุงูุงุชุตุงูุงุช ุจูุฌุงุญ ุจุนุฏ ุชูููุฐ ุงูุณูุฑุจุช.');
    } catch (poolError) {
      console.error('โ ุฎุทุฃ ุนูุฏ ูุญุงููุฉ ุฅุบูุงู pool ุงูุงุชุตุงูุงุช:', poolError);
    }
  }
};

runMigration(); // ุงูุชูููุฐ ุงููุจุงุดุฑ ููุณูุฑุจุช

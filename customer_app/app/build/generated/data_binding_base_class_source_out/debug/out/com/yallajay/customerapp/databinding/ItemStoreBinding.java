// Generated by view binder compiler. Do not edit!
package com.yallajay.customerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.yallajay.customerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStoreBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView storeDescriptionTextView;

  @NonNull
  public final ImageView storeLogoImageView;

  @NonNull
  public final TextView storeNameTextView;

  @NonNull
  public final TextView storeStatusTextView;

  private ItemStoreBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView storeDescriptionTextView, @NonNull ImageView storeLogoImageView,
      @NonNull TextView storeNameTextView, @NonNull TextView storeStatusTextView) {
    this.rootView = rootView;
    this.storeDescriptionTextView = storeDescriptionTextView;
    this.storeLogoImageView = storeLogoImageView;
    this.storeNameTextView = storeNameTextView;
    this.storeStatusTextView = storeStatusTextView;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStoreBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStoreBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_store, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStoreBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.storeDescriptionTextView;
      TextView storeDescriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (storeDescriptionTextView == null) {
        break missingId;
      }

      id = R.id.storeLogoImageView;
      ImageView storeLogoImageView = ViewBindings.findChildViewById(rootView, id);
      if (storeLogoImageView == null) {
        break missingId;
      }

      id = R.id.storeNameTextView;
      TextView storeNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (storeNameTextView == null) {
        break missingId;
      }

      id = R.id.storeStatusTextView;
      TextView storeStatusTextView = ViewBindings.findChildViewById(rootView, id);
      if (storeStatusTextView == null) {
        break missingId;
      }

      return new ItemStoreBinding((MaterialCardView) rootView, storeDescriptionTextView,
          storeLogoImageView, storeNameTextView, storeStatusTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

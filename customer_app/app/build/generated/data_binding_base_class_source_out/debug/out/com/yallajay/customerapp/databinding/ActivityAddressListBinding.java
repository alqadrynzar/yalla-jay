// Generated by view binder compiler. Do not edit!
package com.yallajay.customerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.yallajay.customerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddressListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton addAddressFab;

  @NonNull
  public final Toolbar addressListToolbar;

  @NonNull
  public final TextView addressesErrorTextView;

  @NonNull
  public final ProgressBar addressesProgressBar;

  @NonNull
  public final RecyclerView addressesRecyclerView;

  @NonNull
  public final AppBarLayout appBarLayout;

  private ActivityAddressListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton addAddressFab, @NonNull Toolbar addressListToolbar,
      @NonNull TextView addressesErrorTextView, @NonNull ProgressBar addressesProgressBar,
      @NonNull RecyclerView addressesRecyclerView, @NonNull AppBarLayout appBarLayout) {
    this.rootView = rootView;
    this.addAddressFab = addAddressFab;
    this.addressListToolbar = addressListToolbar;
    this.addressesErrorTextView = addressesErrorTextView;
    this.addressesProgressBar = addressesProgressBar;
    this.addressesRecyclerView = addressesRecyclerView;
    this.appBarLayout = appBarLayout;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddressListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddressListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_address_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddressListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addAddressFab;
      FloatingActionButton addAddressFab = ViewBindings.findChildViewById(rootView, id);
      if (addAddressFab == null) {
        break missingId;
      }

      id = R.id.addressListToolbar;
      Toolbar addressListToolbar = ViewBindings.findChildViewById(rootView, id);
      if (addressListToolbar == null) {
        break missingId;
      }

      id = R.id.addressesErrorTextView;
      TextView addressesErrorTextView = ViewBindings.findChildViewById(rootView, id);
      if (addressesErrorTextView == null) {
        break missingId;
      }

      id = R.id.addressesProgressBar;
      ProgressBar addressesProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (addressesProgressBar == null) {
        break missingId;
      }

      id = R.id.addressesRecyclerView;
      RecyclerView addressesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (addressesRecyclerView == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      return new ActivityAddressListBinding((CoordinatorLayout) rootView, addAddressFab,
          addressListToolbar, addressesErrorTextView, addressesProgressBar, addressesRecyclerView,
          appBarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

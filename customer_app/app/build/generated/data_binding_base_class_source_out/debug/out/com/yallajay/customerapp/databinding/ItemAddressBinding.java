// Generated by view binder compiler. Do not edit!
package com.yallajay.customerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.yallajay.customerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAddressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addressLabelTextView;

  @NonNull
  public final RadioButton addressRadioButton;

  @NonNull
  public final ImageView editAddressButton;

  @NonNull
  public final TextView fullAddressTextView;

  private ItemAddressBinding(@NonNull LinearLayout rootView, @NonNull TextView addressLabelTextView,
      @NonNull RadioButton addressRadioButton, @NonNull ImageView editAddressButton,
      @NonNull TextView fullAddressTextView) {
    this.rootView = rootView;
    this.addressLabelTextView = addressLabelTextView;
    this.addressRadioButton = addressRadioButton;
    this.editAddressButton = editAddressButton;
    this.fullAddressTextView = fullAddressTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressLabelTextView;
      TextView addressLabelTextView = ViewBindings.findChildViewById(rootView, id);
      if (addressLabelTextView == null) {
        break missingId;
      }

      id = R.id.addressRadioButton;
      RadioButton addressRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (addressRadioButton == null) {
        break missingId;
      }

      id = R.id.editAddressButton;
      ImageView editAddressButton = ViewBindings.findChildViewById(rootView, id);
      if (editAddressButton == null) {
        break missingId;
      }

      id = R.id.fullAddressTextView;
      TextView fullAddressTextView = ViewBindings.findChildViewById(rootView, id);
      if (fullAddressTextView == null) {
        break missingId;
      }

      return new ItemAddressBinding((LinearLayout) rootView, addressLabelTextView,
          addressRadioButton, editAddressButton, fullAddressTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

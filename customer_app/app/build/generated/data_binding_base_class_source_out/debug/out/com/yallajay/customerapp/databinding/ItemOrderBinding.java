// Generated by view binder compiler. Do not edit!
package com.yallajay.customerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.yallajay.customerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrderBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final TextView textViewGrandTotal;

  @NonNull
  public final TextView textViewGrandTotalLabel;

  @NonNull
  public final TextView textViewOrderDate;

  @NonNull
  public final TextView textViewOrderId;

  @NonNull
  public final TextView textViewOrderIdLabel;

  @NonNull
  public final TextView textViewOrderStatus;

  @NonNull
  public final TextView textViewStoreName;

  private ItemOrderBinding(@NonNull MaterialCardView rootView, @NonNull View divider,
      @NonNull TextView textViewGrandTotal, @NonNull TextView textViewGrandTotalLabel,
      @NonNull TextView textViewOrderDate, @NonNull TextView textViewOrderId,
      @NonNull TextView textViewOrderIdLabel, @NonNull TextView textViewOrderStatus,
      @NonNull TextView textViewStoreName) {
    this.rootView = rootView;
    this.divider = divider;
    this.textViewGrandTotal = textViewGrandTotal;
    this.textViewGrandTotalLabel = textViewGrandTotalLabel;
    this.textViewOrderDate = textViewOrderDate;
    this.textViewOrderId = textViewOrderId;
    this.textViewOrderIdLabel = textViewOrderIdLabel;
    this.textViewOrderStatus = textViewOrderStatus;
    this.textViewStoreName = textViewStoreName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.textViewGrandTotal;
      TextView textViewGrandTotal = ViewBindings.findChildViewById(rootView, id);
      if (textViewGrandTotal == null) {
        break missingId;
      }

      id = R.id.textViewGrandTotalLabel;
      TextView textViewGrandTotalLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewGrandTotalLabel == null) {
        break missingId;
      }

      id = R.id.textViewOrderDate;
      TextView textViewOrderDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewOrderDate == null) {
        break missingId;
      }

      id = R.id.textViewOrderId;
      TextView textViewOrderId = ViewBindings.findChildViewById(rootView, id);
      if (textViewOrderId == null) {
        break missingId;
      }

      id = R.id.textViewOrderIdLabel;
      TextView textViewOrderIdLabel = ViewBindings.findChildViewById(rootView, id);
      if (textViewOrderIdLabel == null) {
        break missingId;
      }

      id = R.id.textViewOrderStatus;
      TextView textViewOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewOrderStatus == null) {
        break missingId;
      }

      id = R.id.textViewStoreName;
      TextView textViewStoreName = ViewBindings.findChildViewById(rootView, id);
      if (textViewStoreName == null) {
        break missingId;
      }

      return new ItemOrderBinding((MaterialCardView) rootView, divider, textViewGrandTotal,
          textViewGrandTotalLabel, textViewOrderDate, textViewOrderId, textViewOrderIdLabel,
          textViewOrderStatus, textViewStoreName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

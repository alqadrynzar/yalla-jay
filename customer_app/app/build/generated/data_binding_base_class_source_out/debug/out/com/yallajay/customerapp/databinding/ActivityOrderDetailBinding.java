// Generated by view binder compiler. Do not edit!
package com.yallajay.customerapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.card.MaterialCardView;
import com.yallajay.customerapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrderDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialCardView cardViewSpecialNotes;

  @NonNull
  public final NestedScrollView contentScrollView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewProducts;

  @NonNull
  public final TextView textViewDeliveryAddress;

  @NonNull
  public final TextView textViewDeliveryFee;

  @NonNull
  public final TextView textViewError;

  @NonNull
  public final TextView textViewGrandTotal;

  @NonNull
  public final TextView textViewOrderId;

  @NonNull
  public final TextView textViewOrderStatus;

  @NonNull
  public final TextView textViewSpecialNotes;

  @NonNull
  public final TextView textViewStoreName;

  @NonNull
  public final TextView textViewSubtotal;

  @NonNull
  public final Toolbar toolbar;

  private ActivityOrderDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull MaterialCardView cardViewSpecialNotes,
      @NonNull NestedScrollView contentScrollView, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerViewProducts, @NonNull TextView textViewDeliveryAddress,
      @NonNull TextView textViewDeliveryFee, @NonNull TextView textViewError,
      @NonNull TextView textViewGrandTotal, @NonNull TextView textViewOrderId,
      @NonNull TextView textViewOrderStatus, @NonNull TextView textViewSpecialNotes,
      @NonNull TextView textViewStoreName, @NonNull TextView textViewSubtotal,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.cardViewSpecialNotes = cardViewSpecialNotes;
    this.contentScrollView = contentScrollView;
    this.progressBar = progressBar;
    this.recyclerViewProducts = recyclerViewProducts;
    this.textViewDeliveryAddress = textViewDeliveryAddress;
    this.textViewDeliveryFee = textViewDeliveryFee;
    this.textViewError = textViewError;
    this.textViewGrandTotal = textViewGrandTotal;
    this.textViewOrderId = textViewOrderId;
    this.textViewOrderStatus = textViewOrderStatus;
    this.textViewSpecialNotes = textViewSpecialNotes;
    this.textViewStoreName = textViewStoreName;
    this.textViewSubtotal = textViewSubtotal;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrderDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrderDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_order_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrderDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.cardViewSpecialNotes;
      MaterialCardView cardViewSpecialNotes = ViewBindings.findChildViewById(rootView, id);
      if (cardViewSpecialNotes == null) {
        break missingId;
      }

      id = R.id.contentScrollView;
      NestedScrollView contentScrollView = ViewBindings.findChildViewById(rootView, id);
      if (contentScrollView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewProducts;
      RecyclerView recyclerViewProducts = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewProducts == null) {
        break missingId;
      }

      id = R.id.textViewDeliveryAddress;
      TextView textViewDeliveryAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeliveryAddress == null) {
        break missingId;
      }

      id = R.id.textViewDeliveryFee;
      TextView textViewDeliveryFee = ViewBindings.findChildViewById(rootView, id);
      if (textViewDeliveryFee == null) {
        break missingId;
      }

      id = R.id.textViewError;
      TextView textViewError = ViewBindings.findChildViewById(rootView, id);
      if (textViewError == null) {
        break missingId;
      }

      id = R.id.textViewGrandTotal;
      TextView textViewGrandTotal = ViewBindings.findChildViewById(rootView, id);
      if (textViewGrandTotal == null) {
        break missingId;
      }

      id = R.id.textViewOrderId;
      TextView textViewOrderId = ViewBindings.findChildViewById(rootView, id);
      if (textViewOrderId == null) {
        break missingId;
      }

      id = R.id.textViewOrderStatus;
      TextView textViewOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (textViewOrderStatus == null) {
        break missingId;
      }

      id = R.id.textViewSpecialNotes;
      TextView textViewSpecialNotes = ViewBindings.findChildViewById(rootView, id);
      if (textViewSpecialNotes == null) {
        break missingId;
      }

      id = R.id.textViewStoreName;
      TextView textViewStoreName = ViewBindings.findChildViewById(rootView, id);
      if (textViewStoreName == null) {
        break missingId;
      }

      id = R.id.textViewSubtotal;
      TextView textViewSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (textViewSubtotal == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityOrderDetailBinding((CoordinatorLayout) rootView, appBarLayout,
          cardViewSpecialNotes, contentScrollView, progressBar, recyclerViewProducts,
          textViewDeliveryAddress, textViewDeliveryFee, textViewError, textViewGrandTotal,
          textViewOrderId, textViewOrderStatus, textViewSpecialNotes, textViewStoreName,
          textViewSubtotal, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
